{"version":3,"sources":["assets/logo.svg","serviceWorker.js","views/Home/Home.js","views/NotFound.js","components/Header/Header.js","config.js","views/EditListing.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Home","className","src","logo","alt","href","target","rel","NotFound","Header","style","marginBottom","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","placeholder","config","apiURL","EditListing","props","state","edit","params","markets","errorLoading","title","description","requirements","market","industry","published","compensation","duration","applicationLink","loadMarkets","loadListing","axios","get","then","results","setState","data","_id","catch","error","console","log","listing","filter","event","value","checked","name","this","preventDefault","internship","put","result","post","onSubmit","processForm","bind","htmlFor","onChange","handleInputChange","required","rows","disabled","map","htmlfor","React","Component","App","exact","path","component","to","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db3cf72f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport logo from '../../assets/logo.svg';\nimport './Home.css';\n\nfunction Home() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    Edit <code>src/App.js</code> and save to reload.\n                </p>\n                <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                </a>\n            </header>\n        </div>\n    );\n}\n\nexport default Home;\n","import React from 'react';\n\nconst NotFound = () => {\n        return \"Page not found\"\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar'\nimport './Header.css';\n\nconst Header = () => {\n    return (\n        <div className=\"navbar navbar-expand-lg navbar-light bg-light\" style={{marginBottom: 25 + 'px'}}>\n        <a className=\"navbar-brand\" href=\"#\">Navbar</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n  \n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">Link</a>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <a className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Dropdown\n              </a>\n              <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                <a className=\"dropdown-item\" href=\"#\">Action</a>\n                <a className=\"dropdown-item\" href=\"#\">Another action</a>\n                <div className=\"dropdown-divider\"></div>\n                <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n              </div>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link disabled\" href=\"#\">Disabled</a>\n            </li>\n          </ul>\n          <form className=\"form-inline my-2 my-lg-0\">\n            <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\n            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n          </form>\n        </div>\n      </div>\n    )\n}\n\nexport default Header;\n","const config = {\n    apiURL: \"http://localhost:5008/api/\" \n}\n \nexport default config;","import React from 'react';\nimport axios from 'axios';\n\nimport config from '../config';\n\n\nclass EditListing extends React.Component{\n\n\n    constructor(props){\n        super(props)\n        this.state = {\n            edit: this.props.match.params.id ? this.props.match.params.id : false,\n            markets: [],\n            errorLoading: false,\n            //Lisitng Information\n                title: '',\n                description: '',\n                requirements: '',\n                market: '',\n                industry: 'Engineering',\n                published: false,\n                compensation: 'Paid',\n                duration: '1 Month',\n                applicationLink: ''\n            \n        };\n        this.loadMarkets();\n        if(this.state.edit){ \n            this.loadListing();\n        }\n    }\n\n    loadMarkets(){\n        axios.get(config.apiURL + \"Market/\").then(results => {\n            this.setState({\n                markets: results.data,\n                market: results.data[0]._id\n            })\n        }).catch(error => {\n            console.error(error);\n            this.setState({\n                errorLoading: true\n            })\n        });\n    }\n\n    loadListing(){\n        axios.get(config.apiURL + \"Internship/\").then(results => {\n            console.log(results);\n            var listing = results.data.filter(listing => listing._id == this.state.edit )[0];\n            console.log(listing);\n            this.setState({\n                title: listing.title,\n                description: listing.description,\n                requirements: listing.requirements,\n                market: listing.market,\n                industry: listing.industry,\n                published: listing.published,\n                compensation: listing.compensation,\n                duration: listing.duration,\n                applicationLink: listing.applicationLink\n            });\n        }).catch(error => {\n            console.error(error);\n            this.setState({\n                errorLoading: true\n            })\n        });\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        console.log(\"Name: \" + name + \" Value: \" + value);\n        this.setState({\n            [name]: value\n        });\n    }\n    \n    processForm(event){\n        event.preventDefault();\n        var internship = {\n            title: this.state.title,\n            description: this.state.description,\n            requirements: this.state.requirements,\n            market: this.state.market,\n            industry: this.state.industry,\n            compensation: this.state.compensation,\n            duration: this.state.duration,\n            applicationLink: this.state.applicationLink,\n            published: this.state.published\n            // TO-DO: ADD LOGGED IN COMPANY ID INFORMATION\n        }\n        console.log(internship);\n        if(this.state.edit){\n            axios.put(config.apiURL + \"Internship/update/\" + this.state.edit, internship).then(result => {\n                console.log(\"Successfully Edited Internship in Database: \" + result);\n            }).catch(error => {\n                console.error(\"Error Editing Internship in Database: \" + error)\n            });\n        }else{\n            axios.post(config.apiURL + \"Internship/\", internship).then(result => {\n                // TO-DO: Added Success Popup\n                console.log(\"Successfully Added Internship to Database: \" + result);\n            }).catch(error => {\n                console.error(\"Error Adding Internship to Database: \" + error)\n            })\n        }\n    }\n\n    preventFormSubmission(event){\n        event.preventDefault();\n    }\n\n    render(){\n        if(this.state.errorLoading){\n            return(\n            <div className=\"container\">\n                <h1 className=\"text-danger text-center\">Uh oh!</h1>\n                <h5 className=\"text-danger text-center\">There was an error loading this page. Try again.</h5>\n            </div>\n            );\n        }else{\n\n        \n            return(\n                <div className=\"container\" style={{ marginBottom: 25 + 'px' }} onSubmit={this.processForm.bind(this)}>\n                    <h1>{ this.state.edit ? 'Edit Internship' : 'Add New Internship' }</h1>\n                    {/* <button class=\"btn btn-secondary\">Return to Listings</button> */}\n                    <hr></hr>\n                    <form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"title\">Internship Title</label>\n                            <input type=\"text\" className=\"form-control\" name=\"title\" value={this.state.title} placeholder=\"Software Engineering Intern\" onChange={this.handleInputChange.bind(this)} required></input>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Position Description</label>\n                            <textarea type=\"textarea\" rows=\"5\" className=\"form-control\" name=\"description\" value={this.state.description} placeholder=\"This is a 3-month summer position where...\" onChange={this.handleInputChange.bind(this)} required></textarea>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"requirements\">Position Requirements</label>\n                            <textarea type=\"text\" rows=\"5\" className=\"form-control\" name=\"requirements\" value={this.state.requirements} placeholder=\"Experience with Java, C++, or other programming languages\" onChange={this.handleInputChange.bind(this)} required></textarea>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"industry\">Position Industry</label>\n                                    <select className=\"form-control\" name=\"industry\" value={this.state.industry} onChange={this.handleInputChange.bind(this)} required>\n                                        <option disabled value>-- SELECT --</option>\n                                        <option>Engineering</option>\n                                        <option>Marketing</option>\n                                        <option>Human Resources</option>\n                                        <option>Customer Service</option>\n                                        <option>Other</option>\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"market\">Position Market</label>\n                                    <select className=\"form-control\" name=\"market\" value={this.state.market} onChange={this.handleInputChange.bind(this)} required>\n                                    <option disabled value>-- SELECT --</option>\n                                        {\n                                            this.state.markets.map(market => {\n                                                if(market.published){\n                                                    return (<option value={market._id}>{ market.name} </option>);\n                                                }else{\n                                                    return null; \n                                                }\n                                            })\n                                        }\n                                    </select>\n                                </div>\n                            </div>\n                            <div className=\"col\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"compensation\">Compensation</label>\n                                    <select className=\"form-control\" name=\"compensation\" value={this.state.compensation} onChange={this.handleInputChange.bind(this)} required>\n                                        <option disabled value>-- SELECT --</option>\n                                        <option>Paid</option>\n                                        <option>Unpaid</option>\n                                        <option>Stipend</option>\n                                        <option>Other</option>\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"duration\">Duration</label>\n                                    <select className=\"form-control\" name=\"duration\" value={this.state.duration} onChange={this.handleInputChange.bind(this)} required>\n                                        <option disabled value>-- SELECT --</option>\n                                        <option>1 Month</option>\n                                        <option>1-3 Months</option>\n                                        <option>3-6 Months</option>\n                                        <option>6-12 Months</option>\n                                        <option>12+ Months</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"applicationLink\">Application Link</label>\n                            <input type=\"url\" className=\"form-control\" name=\"applicationLink\" value={this.state.applicationLink} placeholder=\"Link to Apply to Position\" onChange={this.handleInputChange.bind(this)} required></input>\n                        </div>\n                        <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"checkbox\" name=\"published\" checked={ this.state.published ? 'true' : 'false'} value={this.state.published} onChange={this.handleInputChange.bind(this)}></input>\n                            <label className=\"form-check-label\" htmlfor=\"published\">\n                                Publish Internship\n                            </label>\n                        </div>\n                        <h3>(Payment Processing Goes Here)</h3>\n                        <input type=\"submit\" className={ this.state.published ? 'btn btn-success' : 'btn btn-secondary' } value={ this.state.published ? 'Publish Internship' : 'Save Draft' }></input>\n                    </form>\n                </div>\n            );\n        }\n    }\n}\n\nexport default EditListing;","import React from 'react';\nimport { Route, Switch, Redirect  } from 'react-router-dom';\nimport Home from \"./views/Home/Home\"\nimport NotFound from \"./views/NotFound\"\nimport Header from \"./components/Header/Header\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport EditListing from './views/EditListing';\n\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <Switch>\n        <Route exact path=\"/Home\" component={Home} />\n        <Route exact path=\"/\">\n          <Redirect to=\"/Home\" />\n        </Route>\n        <Route exact path=\"/listing/add\" component={EditListing}/>\n        <Route exact path=\"/listing/edit/:id\" component={EditListing}/>\n        <Route component={NotFound}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}